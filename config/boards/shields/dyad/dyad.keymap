#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200  // default: 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 20    // default: 10

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/mouse.h>
#include <dt-bindings/zmk/outputs.h>

&mt {
    tapping-term-ms = <500>;
    flavor = "tap-preferred";
};

/ {
    combos {
        compatible = "zmk,combos";

        delete_combo2 {
            bindings = <&kp DELETE>;
            key-positions = <9 19>;
            layers = <0>;
        };

        minus_combo {
            bindings = <&kp MINUS>;
            key-positions = <32 33>;
            layers = <1>;
        };

        undo_combo {
            bindings = <&kp LC(Z)>;
            key-positions = <20 21>;
            layers = <1>;
        };

        tab_combo {
            bindings = <&lt 3 TAB>;
            key-positions = <30 31>;
            layers = <0>;
        };

        escape_combo {
            bindings = <&kp ESC>;
            key-positions = <0 10>;
            layers = <0>;
        };

        delete_comb {
            bindings = <&lt 6 DELETE>;
            key-positions = <33 32>;
            layers = <0>;
        };

        tab2_combo {
            bindings = <&kp TAB>;
            key-positions = <10 11>;
        };

        copy_combo {
            bindings = <&kp LC(C)>;
            key-positions = <22 23>;
        };

        paste_combo {
            bindings = <&kp LC(V)>;
            key-positions = <23 24>;
        };

        cut_combo {
            bindings = <&kp LC(X)>;
            key-positions = <21 22>;
        };

        F5_combo {
            bindings = <&kp F5>;
            key-positions = <17 7>;
        };

        prtscn_combo {
            bindings = <&kp PRINTSCREEN>;
            key-positions = <15 5>;
        };

        underscore_combo {
            bindings = <&kp UNDERSCORE>;
            key-positions = <32 33>;
            layers = <2>;
        };

        middle_click_combo {
            bindings = <&mkp MCLK>;
            key-positions = <30 31>;
            layers = <4>;
        };

        pin_combo {
            bindings = <&pin_macro>;
            key-positions = <30 33 31 32>;
        };
    };

    macros {
        pin_macro: pin_macro {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp N5 &kp NUMBER_6 &kp N7 &kp N8 &kp N9 &kp N0 &kp ENTER>;
            label = "PIN_MACRO";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BSPC |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&mt TAB Q    &kp W  &kp E  &kp R       &kp T             &kp Y            &kp U              &kp I                &kp O            &kp P
&mt LSHFT A  &kp S  &kp D  &mt LALT F  &mt LEFT_WIN G    &mt RIGHT_WIN H  &mt RIGHT_SHIFT J  &mt RIGHT_CONTROL K  &mt RIGHT_ALT L  &kp APOS
&mt LCTRL Z  &kp X  &kp C  &kp V       &kp B             &kp N            &kp M              &kp COMMA            &kp PERIOD       &kp SLASH
                           &lt 2 ESC   &lt 1 ENTER       &lt 4 SPACE      &lt 5 BACKSPACE
            >;
        };

        num_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BSPC |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp PAGE_UP    &kp HOME        &kp UP_ARROW    &kp END          &trans            &kp LEFT_BRACKET  &kp N7        &kp N8        &kp N9        &kp RIGHT_BRACKET
&kp PAGE_DOWN  &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &mmv MOVE_UP      &kp EQUAL         &kp NUMBER_4  &kp N5        &kp NUMBER_6  &kp SEMICOLON
&trans         &trans          &trans          &trans           &mmv MOVE_DOWN    &kp BACKSLASH     &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp GRAVE
                                               &trans           &trans            &kp N0            &kp PERIOD
            >;
        };

        symbol_layer {
            bindings = <
&trans  &trans  &trans  &trans  &trans    &kp LEFT_BRACE        &kp AMPERSAND          &kp ASTERISK  &kp LEFT_PARENTHESIS  &kp RIGHT_BRACE
&trans  &trans  &trans  &trans  &trans    &kp PLUS              &kp DOLLAR             &kp PERCENT   &kp CARET             &kp COLON
&trans  &trans  &trans  &trans  &trans    &kp PIPE              &kp EXCLAMATION        &kp AT_SIGN   &kp HASH              &kp TILDE
                        &trans  &trans    &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS
            >;
        };

        function_layer {
            bindings = <
&bt BT_PRV      &trans  &bootloader  &trans  &bt BT_NXT    &kp PRINTSCREEN  &kp F7  &kp F8  &kp F9  &kp F12
&trans          &trans  &soft_off    &trans  &trans        &kp SCROLLLOCK   &kp F4  &kp F5  &kp F6  &kp F11
&bt BT_CLR_ALL  &trans  &trans       &trans  &trans        &kp PAUSE_BREAK  &kp F1  &kp F2  &kp F3  &kp F10
                                     &trans  &trans        &trans           &trans
            >;
        };

        mouse_layer {
            bindings = <
&msc SCRL_UP    &msc SCRL_LEFT  &mmv MOVE_UP    &msc SCRL_RIGHT  &trans        &trans  &trans     &trans     &trans     &trans
&msc SCRL_DOWN  &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_RIGHT  &trans        &trans  &mkp LCLK  &mkp RCLK  &mkp MCLK  &trans
&kp K_UNDO      &kp K_CUT       &kp K_COPY      &kp K_PASTE      &kp K_REDO    &trans  &trans     &trans     &trans     &trans
                                                &mkp LCLK        &mkp RCLK     &trans  &trans
            >;
        };

        navigation_layer {
            bindings = <
&kp PAGE_UP    &kp HOME        &kp UP_ARROW    &kp END      &kp INSERT      &trans  &trans  &trans  &trans  &trans
&kp PAGE_DOWN  &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT    &kp CAPSLOCK    &trans  &trans  &trans  &trans  &trans
&kp K_UNDO     &kp K_CUT       &kp K_COPY      &kp K_PASTE  &kp K_REDO      &trans  &trans  &trans  &trans  &trans
                                               &trans       &trans          &trans  &trans
            >;
        };

        media_layer {
            bindings = <
&trans  &kp K_PREVIOUS  &kp C_VOLUME_UP    &kp K_NEXT          &trans              &trans  &trans  &trans  &trans  &trans
&trans  &kp C_REWIND    &kp C_VOLUME_DOWN  &kp C_FAST_FORWARD  &trans              &trans  &trans  &trans  &trans  &trans
&trans  &trans          &kp K_MUTE         &trans              &trans              &trans  &trans  &trans  &trans  &trans
                                           &kp K_MUTE          &kp K_PLAY_PAUSE    &trans  &trans
            >;
        };
    };
};
